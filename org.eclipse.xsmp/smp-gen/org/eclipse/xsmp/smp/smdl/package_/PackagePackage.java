/**
 * *******************************************************************************
 * * Copyright (C) 2020-2022 THALES ALENIA SPACE FRANCE.
 * *
 * * All rights reserved. This program and the accompanying materials
 * * are made available under the terms of the Eclipse Public License 2.0
 * * which accompanies this distribution, and is available at
 * * https://www.eclipse.org/legal/epl-2.0/
 * *
 * * SPDX-License-Identifier: EPL-2.0
 * ******************************************************************************
 */
package org.eclipse.xsmp.smp.smdl.package_;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.xsmp.smp.core.elements.ElementsPackage;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * <!-- begin-model-doc -->
 * This schema defines all metamodel elements that are needed in order to define how implementations of types defined in catalogues are packaged. This includes not only models, which may have different implementations in different packages, but as well all other user-defined types.
 * 
 * This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.
 * 
 * UML Model Information:
 *     UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.smdl.xmi
 *     UML model name:  Obsolete
 *     UML metamodel:   http://schema.omg.org/spec/UML/2.2
 *     XMI version:     2.1
 *     XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier
 * 
 * XSLT Processing Information:
 *     Processing date: 2019-10-28T17:05:22.729+01:00
 *     XSLT processor:  SAXON 8.8.0.7 from Saxonica
 *     XSLT version:    2.0
 *     XSLT stylesheet: xmi-to-xsd.xslt
 *       
 * 
 *       This schema document provides attribute declarations and attribute group, complex type and simple type definitions which can be used in the construction of user schemas to define the structure of particular linking constructs, e.g.
 *       < xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xl="http://www.w3.org/1999/xlink"> <xs:import namespace="http://www.w3.org/1999/xlink" location="http://www.w3.org/1999/xlink.xsd"> <xs:element name="mySimple"> <xs:complexType> ... <xs:attributeGroup ref="xl:simpleAttrs"/> ... </xs:complexType> </xs:element> ...< /xs:schema>
 *     
 * 
 *      
 *   <div xmlns="http://www.w3.org/1999/xhtml">
 *         
 *     <h1>About the XML namespace</h1>
 *         
 *     <div class="bodytext">
 *            
 *       <p>
 *       This schema document describes the XML namespace, in a form
 *       suitable for import by other schema documents.
 *      </p>
 *            
 *       <p>
 *               See 
 *         <a href="http://www.w3.org/XML/1998/namespace.html">
 *       http://www.w3.org/XML/1998/namespace.html</a>
 *          and
 *       
 *         <a href="http://www.w3.org/TR/REC-xml">
 *       http://www.w3.org/TR/REC-xml</a>
 *          for information 
 *       about this namespace.
 *      
 *       </p>
 *            
 *       <p>
 *       Note that local names in this namespace are intended to be
 *       defined only by the World Wide Web Consortium or its subgroups.
 *       The names currently defined in this namespace are listed below.
 *       They should not be used with conflicting semantics by any Working
 *       Group, specification, or document instance.
 *      </p>
 *            
 *       <p>
 *            
 *       See further below in this document for more information about 
 *         <a href="#usage">how to refer to this schema document from your own
 *       XSD schema documents</a>
 *          and about 
 *         <a href="#nsversioning">the
 *       namespace-versioning policy governing this schema document</a>
 *         .
 *      
 *       </p>
 *           
 *     </div>
 *        
 *   </div>
 *     
 * 
 * 
 *      
 *   <div xmlns="http://www.w3.org/1999/xhtml">
 *        
 *     
 *     <h3>Father (in any context at all)</h3>
 *      
 * 
 *     
 *     <div class="bodytext">
 *            
 *       <p>
 *       denotes Jon Bosak, the chair of 
 *       the original XML Working Group.  This name is reserved by 
 *       the following decision of the W3C XML Plenary and 
 *       XML Coordination groups:
 *      </p>
 *            
 *       <blockquote>
 *                
 *         <p>
 * 	In appreciation for his vision, leadership and
 * 	dedication the W3C XML Plenary on this 10th day of
 * 	February, 2000, reserves for Jon Bosak in perpetuity
 * 	the XML name "xml:Father".
 *        </p>
 *              
 *       </blockquote>
 *           
 *     </div>
 *        
 *   </div>
 *     
 * 
 * 
 *      
 *   <div id="usage" xml:id="usage" xmlns="http://www.w3.org/1999/xhtml">
 *         
 *     <h2>
 *       <a name="usage">About this schema document</a>
 *     </h2>
 *         
 *     <div class="bodytext">
 *            
 *       <p>
 *               This schema defines attributes and an attribute group suitable
 *       for use by schemas wishing to allow 
 *         <code>xml:base</code>
 *         ,
 *       
 *         <code>xml:lang</code>
 *         , 
 *         <code>xml:space</code>
 *          or
 *       
 *         <code>xml:id</code>
 *          attributes on elements they define.
 *      
 *       </p>
 *            
 *       <p>
 *       To enable this, such a schema must import this schema for
 *       the XML namespace, e.g. as follows:
 *      </p>
 *            
 *       <pre>
 *           &lt;schema . . .&gt;
 *            . . .
 *            &lt;import namespace="http://www.w3.org/XML/1998/namespace"
 *                       schemaLocation="http://www.w3.org/2001/xml.xsd"/&gt;
 *      </pre>
 *            
 *       <p>
 *       or
 *      </p>
 *            
 *       <pre>
 *            &lt;import namespace="http://www.w3.org/XML/1998/namespace"
 *                       schemaLocation="http://www.w3.org/2009/01/xml.xsd"/&gt;
 *      </pre>
 *            
 *       <p>
 *       Subsequently, qualified reference to any of the attributes or the
 *       group defined below will have the desired effect, e.g.
 *      </p>
 *            
 *       <pre>
 *           &lt;type . . .&gt;
 *            . . .
 *            &lt;attributeGroup ref="xml:specialAttrs"/&gt;
 *      </pre>
 *            
 *       <p>
 *       will define a type which will schema-validate an instance element
 *       with any of those attributes.
 *      </p>
 *           
 *     </div>
 *        
 *   </div>
 *     
 * 
 * 
 *      
 *   <div id="nsversioning" xml:id="nsversioning" xmlns="http://www.w3.org/1999/xhtml">
 *         
 *     <h2>
 *       <a name="nsversioning">Versioning policy for this schema document</a>
 *     </h2>
 *         
 *     <div class="bodytext">
 *            
 *       <p>
 *               In keeping with the XML Schema WG's standard versioning
 *       policy, this schema document will persist at
 *       
 *         <a href="http://www.w3.org/2009/01/xml.xsd">
 *        http://www.w3.org/2009/01/xml.xsd</a>
 *         .
 *      
 *       </p>
 *            
 *       <p>
 *               At the date of issue it can also be found at
 *       
 *         <a href="http://www.w3.org/2001/xml.xsd">
 *        http://www.w3.org/2001/xml.xsd</a>
 *         .
 *      
 *       </p>
 *            
 *       <p>
 *               The schema document at that URI may however change in the future,
 *       in order to remain compatible with the latest version of XML
 *       Schema itself, or with the XML namespace itself.  In other words,
 *       if the XML Schema or XML namespaces change, the version of this
 *       document at 
 *         <a href="http://www.w3.org/2001/xml.xsd">
 *        http://www.w3.org/2001/xml.xsd 
 *       </a>
 *          
 *       will change accordingly; the version at 
 *       
 *         <a href="http://www.w3.org/2009/01/xml.xsd">
 *        http://www.w3.org/2009/01/xml.xsd 
 *       </a>
 *          
 *       will not change.
 *      
 *       </p>
 *            
 *       <p>
 *       Previous dated (and unchanging) versions of this schema 
 *       document are at:
 *      </p>
 *            
 *       <ul>
 *               
 *         <li>
 *           <a href="http://www.w3.org/2009/01/xml.xsd">
 * 	http://www.w3.org/2009/01/xml.xsd</a>
 *         </li>
 *               
 *         <li>
 *           <a href="http://www.w3.org/2007/08/xml.xsd">
 * 	http://www.w3.org/2007/08/xml.xsd</a>
 *         </li>
 *               
 *         <li>
 *           <a href="http://www.w3.org/2004/10/xml.xsd">
 * 	http://www.w3.org/2004/10/xml.xsd</a>
 *         </li>
 *               
 *         <li>
 *           <a href="http://www.w3.org/2001/03/xml.xsd">
 * 	http://www.w3.org/2001/03/xml.xsd</a>
 *         </li>
 *              
 *       </ul>
 *           
 *     </div>
 *        
 *   </div>
 *     
 * 
 * This schema defines base metaclasses and annotation mechanisms used throughout the SMP Metamodel.
 * 
 * This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.
 * 
 * UML Model Information:
 *     UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.core.xmi
 *     UML model name:  Obsolete
 *     UML metamodel:   http://schema.omg.org/spec/UML/2.2
 *     XMI version:     2.1
 *     XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier
 * 
 * XSLT Processing Information:
 *     Processing date: 2019-10-28T16:29:39.084+01:00
 *     XSLT processor:  SAXON 8.8.0.7 from Saxonica
 *     XSLT version:    2.0
 *     XSLT stylesheet: xmi-to-xsd.xslt
 *       
 * This schema defines all metamodel elements that are needed in order to define models in a catalogue. Catalogues make use of the mechanisms defined in Core Types, e.g. enumerations and structures, and they add reference types (interfaces and components), events and a hierarchical grouping mechanism (namespaces).
 * 
 * This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.
 * 
 * UML Model Information:
 *     UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.smdl.xmi
 *     UML model name:  Obsolete
 *     UML metamodel:   http://schema.omg.org/spec/UML/2.2
 *     XMI version:     2.1
 *     XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier
 * 
 * XSLT Processing Information:
 *     Processing date: 2019-10-28T17:05:22.729+01:00
 *     XSLT processor:  SAXON 8.8.0.7 from Saxonica
 *     XSLT version:    2.0
 *     XSLT stylesheet: xmi-to-xsd.xslt
 *       
 * This schema provides basic types and typing mechanisms, together with appropriate value specification mechanisms.
 * 
 * This file is generated by the UMF XML Schema Generation Tool, version 2.1.0.qualifier.
 * 
 * UML Model Information:
 *     UML model file:  file:/C:/Data/Projects/ECSS16/Software/Windows/pfritzen/SMP/Src/ecss.smp.smdl/target/xmi/ecss.smp.core.xmi
 *     UML model name:  Obsolete
 *     UML metamodel:   http://schema.omg.org/spec/UML/2.2
 *     XMI version:     2.1
 *     XMI exporter:    UMF XMI Converter (from MagicDraw UML 17.0.2), version 2.1.0.qualifier
 * 
 * XSLT Processing Information:
 *     Processing date: 2019-10-28T16:29:39.084+01:00
 *     XSLT processor:  SAXON 8.8.0.7 from Saxonica
 *     XSLT version:    2.0
 *     XSLT stylesheet: xmi-to-xsd.xslt
 *       
 * <!-- end-model-doc -->
 * @see org.eclipse.xsmp.smp.smdl.package_.PackageFactory
 * @model kind="package"
 * @generated
 */
public interface PackagePackage extends EPackage
{
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "package";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://www.ecss.nl/smp/2019/Smdl/Package";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "Package";

	/**
	 * The package content type ID.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eCONTENT_TYPE = "org.opensmp.smdl.smppkg";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	PackagePackage eINSTANCE = org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl.init();

	/**
	 * The meta object id for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.DependencyOfPackageImpl <em>Dependency Of Package</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.DependencyOfPackageImpl
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getDependencyOfPackage()
	 * @generated
	 */
	int DEPENDENCY_OF_PACKAGE = 0;

	/**
	 * The feature id for the '<em><b>Package Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DEPENDENCY_OF_PACKAGE__PACKAGE_NAME = 0;

	/**
	 * The feature id for the '<em><b>Package</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DEPENDENCY_OF_PACKAGE__PACKAGE = 1;

	/**
	 * The number of structural features of the '<em>Dependency Of Package</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DEPENDENCY_OF_PACKAGE_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.ImplementationOfPackageImpl <em>Implementation Of Package</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.ImplementationOfPackageImpl
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getImplementationOfPackage()
	 * @generated
	 */
	int IMPLEMENTATION_OF_PACKAGE = 1;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPLEMENTATION_OF_PACKAGE__TYPE_NAME = 0;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPLEMENTATION_OF_PACKAGE__TYPE = 1;

	/**
	 * The number of structural features of the '<em>Implementation Of Package</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPLEMENTATION_OF_PACKAGE_FEATURE_COUNT = 2;

	/**
	 * The meta object id for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.PackageImpl <em>Package</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackageImpl
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getPackage()
	 * @generated
	 */
	int PACKAGE = 2;

	/**
	 * The feature id for the '<em><b>Description</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__DESCRIPTION = ElementsPackage.DOCUMENT__DESCRIPTION;

	/**
	 * The feature id for the '<em><b>Metadata</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__METADATA = ElementsPackage.DOCUMENT__METADATA;

	/**
	 * The feature id for the '<em><b>Id</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__ID = ElementsPackage.DOCUMENT__ID;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__NAME = ElementsPackage.DOCUMENT__NAME;

	/**
	 * The feature id for the '<em><b>Title</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__TITLE = ElementsPackage.DOCUMENT__TITLE;

	/**
	 * The feature id for the '<em><b>Date</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__DATE = ElementsPackage.DOCUMENT__DATE;

	/**
	 * The feature id for the '<em><b>Creator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__CREATOR = ElementsPackage.DOCUMENT__CREATOR;

	/**
	 * The feature id for the '<em><b>Version</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__VERSION = ElementsPackage.DOCUMENT__VERSION;

	/**
	 * The feature id for the '<em><b>Implementation</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__IMPLEMENTATION = ElementsPackage.DOCUMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Dependency</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE__DEPENDENCY = ElementsPackage.DOCUMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Package</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_FEATURE_COUNT = ElementsPackage.DOCUMENT_FEATURE_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.PackageDocumentRootImpl <em>Document Root</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackageDocumentRootImpl
	 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getPackageDocumentRoot()
	 * @generated
	 */
	int PACKAGE_DOCUMENT_ROOT = 3;

	/**
	 * The feature id for the '<em><b>Mixed</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DOCUMENT_ROOT__MIXED = 0;

	/**
	 * The feature id for the '<em><b>XMLNS Prefix Map</b></em>' map.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DOCUMENT_ROOT__XMLNS_PREFIX_MAP = 1;

	/**
	 * The feature id for the '<em><b>XSI Schema Location</b></em>' map.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DOCUMENT_ROOT__XSI_SCHEMA_LOCATION = 2;

	/**
	 * The feature id for the '<em><b>Package</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DOCUMENT_ROOT__PACKAGE = 3;

	/**
	 * The number of structural features of the '<em>Document Root</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DOCUMENT_ROOT_FEATURE_COUNT = 4;


	/**
	 * Returns the meta object for class '{@link org.eclipse.xsmp.smp.smdl.package_.DependencyOfPackage <em>Dependency Of Package</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Dependency Of Package</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.DependencyOfPackage
	 * @generated
	 */
	EClass getDependencyOfPackage();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.xsmp.smp.smdl.package_.DependencyOfPackage#getPackageName <em>Package Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Package Name</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.DependencyOfPackage#getPackageName()
	 * @see #getDependencyOfPackage()
	 * @generated
	 */
	EAttribute getDependencyOfPackage_PackageName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.xsmp.smp.smdl.package_.DependencyOfPackage#getPackage <em>Package</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Package</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.DependencyOfPackage#getPackage()
	 * @see #getDependencyOfPackage()
	 * @generated
	 */
	EReference getDependencyOfPackage_Package();

	/**
	 * Returns the meta object for class '{@link org.eclipse.xsmp.smp.smdl.package_.ImplementationOfPackage <em>Implementation Of Package</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Implementation Of Package</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.ImplementationOfPackage
	 * @generated
	 */
	EClass getImplementationOfPackage();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.xsmp.smp.smdl.package_.ImplementationOfPackage#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Type Name</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.ImplementationOfPackage#getTypeName()
	 * @see #getImplementationOfPackage()
	 * @generated
	 */
	EAttribute getImplementationOfPackage_TypeName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.xsmp.smp.smdl.package_.ImplementationOfPackage#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.ImplementationOfPackage#getType()
	 * @see #getImplementationOfPackage()
	 * @generated
	 */
	EReference getImplementationOfPackage_Type();

	/**
	 * Returns the meta object for class '{@link org.eclipse.xsmp.smp.smdl.package_.Package <em>Package</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Package</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.Package
	 * @generated
	 */
	EClass getPackage();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.xsmp.smp.smdl.package_.Package#getImplementation <em>Implementation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Implementation</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.Package#getImplementation()
	 * @see #getPackage()
	 * @generated
	 */
	EReference getPackage_Implementation();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.xsmp.smp.smdl.package_.Package#getDependency <em>Dependency</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Dependency</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.Package#getDependency()
	 * @see #getPackage()
	 * @generated
	 */
	EReference getPackage_Dependency();

	/**
	 * Returns the meta object for class '{@link org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot <em>Document Root</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Document Root</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot
	 * @generated
	 */
	EClass getPackageDocumentRoot();

	/**
	 * Returns the meta object for the attribute list '{@link org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getMixed <em>Mixed</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute list '<em>Mixed</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getMixed()
	 * @see #getPackageDocumentRoot()
	 * @generated
	 */
	EAttribute getPackageDocumentRoot_Mixed();

	/**
	 * Returns the meta object for the map '{@link org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getXMLNSPrefixMap <em>XMLNS Prefix Map</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the map '<em>XMLNS Prefix Map</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getXMLNSPrefixMap()
	 * @see #getPackageDocumentRoot()
	 * @generated
	 */
	EReference getPackageDocumentRoot_XMLNSPrefixMap();

	/**
	 * Returns the meta object for the map '{@link org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getXSISchemaLocation <em>XSI Schema Location</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the map '<em>XSI Schema Location</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getXSISchemaLocation()
	 * @see #getPackageDocumentRoot()
	 * @generated
	 */
	EReference getPackageDocumentRoot_XSISchemaLocation();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getPackage <em>Package</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Package</em>'.
	 * @see org.eclipse.xsmp.smp.smdl.package_.PackageDocumentRoot#getPackage()
	 * @see #getPackageDocumentRoot()
	 * @generated
	 */
	EReference getPackageDocumentRoot_Package();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	PackageFactory getPackageFactory();

	/**
	 * <!-- begin-user-doc -->
	 * Defines literals for the meta objects that represent
	 * <ul>
	 *   <li>each class,</li>
	 *   <li>each feature of each class,</li>
	 *   <li>each enum,</li>
	 *   <li>and each data type</li>
	 * </ul>
	 * <!-- end-user-doc -->
	 * @generated
	 */
	interface Literals
	{
		/**
		 * The meta object literal for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.DependencyOfPackageImpl <em>Dependency Of Package</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.DependencyOfPackageImpl
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getDependencyOfPackage()
		 * @generated
		 */
		EClass DEPENDENCY_OF_PACKAGE = eINSTANCE.getDependencyOfPackage();

		/**
		 * The meta object literal for the '<em><b>Package Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute DEPENDENCY_OF_PACKAGE__PACKAGE_NAME = eINSTANCE.getDependencyOfPackage_PackageName();

		/**
		 * The meta object literal for the '<em><b>Package</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference DEPENDENCY_OF_PACKAGE__PACKAGE = eINSTANCE.getDependencyOfPackage_Package();

		/**
		 * The meta object literal for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.ImplementationOfPackageImpl <em>Implementation Of Package</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.ImplementationOfPackageImpl
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getImplementationOfPackage()
		 * @generated
		 */
		EClass IMPLEMENTATION_OF_PACKAGE = eINSTANCE.getImplementationOfPackage();

		/**
		 * The meta object literal for the '<em><b>Type Name</b></em>' attribute feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute IMPLEMENTATION_OF_PACKAGE__TYPE_NAME = eINSTANCE.getImplementationOfPackage_TypeName();

		/**
		 * The meta object literal for the '<em><b>Type</b></em>' reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference IMPLEMENTATION_OF_PACKAGE__TYPE = eINSTANCE.getImplementationOfPackage_Type();

		/**
		 * The meta object literal for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.PackageImpl <em>Package</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackageImpl
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getPackage()
		 * @generated
		 */
		EClass PACKAGE = eINSTANCE.getPackage();

		/**
		 * The meta object literal for the '<em><b>Implementation</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PACKAGE__IMPLEMENTATION = eINSTANCE.getPackage_Implementation();

		/**
		 * The meta object literal for the '<em><b>Dependency</b></em>' containment reference list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PACKAGE__DEPENDENCY = eINSTANCE.getPackage_Dependency();

		/**
		 * The meta object literal for the '{@link org.eclipse.xsmp.smp.smdl.package_.impl.PackageDocumentRootImpl <em>Document Root</em>}' class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackageDocumentRootImpl
		 * @see org.eclipse.xsmp.smp.smdl.package_.impl.PackagePackageImpl#getPackageDocumentRoot()
		 * @generated
		 */
		EClass PACKAGE_DOCUMENT_ROOT = eINSTANCE.getPackageDocumentRoot();

		/**
		 * The meta object literal for the '<em><b>Mixed</b></em>' attribute list feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EAttribute PACKAGE_DOCUMENT_ROOT__MIXED = eINSTANCE.getPackageDocumentRoot_Mixed();

		/**
		 * The meta object literal for the '<em><b>XMLNS Prefix Map</b></em>' map feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PACKAGE_DOCUMENT_ROOT__XMLNS_PREFIX_MAP = eINSTANCE.getPackageDocumentRoot_XMLNSPrefixMap();

		/**
		 * The meta object literal for the '<em><b>XSI Schema Location</b></em>' map feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PACKAGE_DOCUMENT_ROOT__XSI_SCHEMA_LOCATION = eINSTANCE.getPackageDocumentRoot_XSISchemaLocation();

		/**
		 * The meta object literal for the '<em><b>Package</b></em>' containment reference feature.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		EReference PACKAGE_DOCUMENT_ROOT__PACKAGE = eINSTANCE.getPackageDocumentRoot_Package();

	}

} //PackagePackage
